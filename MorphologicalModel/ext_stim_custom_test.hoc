//Attempt at creating own extracellular stimulation from scratch

//Define Cell and Cell Connections
begintemplate CellAii
public soma, dend
create soma, dend[2]

proc init() {
	
	create soma, dend[2]

	soma {
		nseg = 1
		diam = 25
		L = 25
		Ra = 150
		insert pas
		g_pas = 0.000025
		e_pas = -50
        insert extracellular
		insert AIIka
		gkabar_AIIka = 0.004
	}

	dend[0] {
   	 	nseg = 11
   	 	diam = 0.3
    	L = 32
    	Ra = 150
		insert pas
		g_pas = 0.000025
		e_pas = -50
        insert extracellular
	}

	dend[1] {
    	nseg = 1
    	diam = 2
    	L = 2
    	Ra = 150
		insert pas
		g_pas = 0.000025
		e_pas = -50
        insert extracellular
    	insert AIIka
    	insert AIIkm
    	insert AIIna
    	gkabar_AIIka = 0.08
	}
	
	// Connect things together
	connect dend[0](0), soma(0)
	connect dend[1](0), dend[0](1)
	topology()
}
endtemplate CellAii

objref cell_aii, Aii

Aii = new List()
NUMaii = 1
// NUMaii = 18

for(i=0;i<NUMaii;i=i+1){
	cell_aii = new CellAii()
	Aii.append(cell_aii)
	print "Aii: ", i
}

access CellAii[0].soma
// access CellAii[0].dend[0]
// access CellAii[0].dend[1]



//Define Extracellular Stimulus
objref Vext, X, y, z, exIClmp
Vext=new Vector(11,0)    //extracellular voltage applied to nodes
X=new Vector(11,0)       //x-coordinate for all the nodes
y=new Vector(11,0) 	//y-coordinate for all the nodes
z=new Vector(11,0)	//z-coordinate for all the nodes
deltax = (32/11)
proc xypos(){
	X.x[0]=(32/2)	//using dend
	y.x[0]=0
	for i=1, 3-1 {
		X.x[i]=X.x[i-1]+deltax
		y.x[i]=0
		z.x[i]=0
		print "node ", i, " x=", X.x[i], " y=", y.x[i], " z=", z.x[i]
	}
}

//This voltage can also be imported from plot data exported from comsol
//calculate extracellular voltage applied to each node
//use point source extracellular stimulation --> V=I*rhoe/(4*pi*r), where rhoe is extracellular resistivity
amp = 10
polarity = -1
//Electrode location
xelec=(11-1)/2*deltax // [um] electrode x-coordinate
yelec=0         //[um] electrode y-coordinate
zelec=500	//[um] electrode z-coordinate
rhoe=5e6 //[Ohm-um]  specific extracellular resistance
pi=3.141592654	

proc volt(){
	xypos()
	for k=0, 3-1 {
		r = sqrt((zelec-z.x[k])^2 + (yelec-y.x[k])^2 + (xelec-X.x[k])^2)  //[um] distance from electrode
		I = polarity*amp
		Vext.x[k]=(I*rhoe)/(4*pi*r)   //[mV]
		// print Vext.x[k]
	}
}

create electrode
//extracellular stimulus
//electrode is a dummy compartment that holds exIClmp
proc stimul() {
	volt()
	electrode{
		exIClmp=new IClamp()
		exIClmp.loc(.5)
		exIClmp.del=0.1
		exIClmp.dur=10
		exIClmp.amp=amp
	}
}
// advance() is a Neuron function that is called at every time step 
// override the default function by defining it here
// assign e_extracellular to each node 
// when stimulus is off, e_extracellular is 0, when it is on, e_extracellular is Vext
proc advance(){
	for k=0,1 {
		cell_aii.dend[k] e_extracellular(0.5)=(exIClmp.i)*Vext.x[k]	//[mV]
	}
	fadvance()
}

stimul()
// tstop = 500

run()

//Store Data
objref f1
f1 = new File("trial_custom_stimulus2.txt")
f1.aopen("trial_custom_stimulus2.txt")
for i=0, 100 {
	f1.printf("%8.8f ", cell_aii.dend[0].v(i))
}
f1.close()